# Generated by Django 4.2.6 on 2025-01-13 10:53

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Certification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, max_length=100, populate_from=['name'])),
                ('description', models.TextField(blank=True, null=True)),
                ('poster', models.URLField(blank=True, null=True)),
            ],
            options={
                'ordering': ('name',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Director',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, max_length=100, populate_from=['name'])),
                ('description', models.TextField(blank=True, null=True)),
                ('poster', models.URLField(blank=True, null=True)),
            ],
            options={
                'ordering': ('name',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, max_length=100, populate_from=['name'])),
                ('description', models.TextField(blank=True, null=True)),
                ('poster', models.URLField(blank=True, null=True)),
            ],
            options={
                'ordering': ('name',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, max_length=100, populate_from=['name'])),
                ('year', models.IntegerField(validators=[django.core.validators.MinValueValidator(1888), django.core.validators.MaxValueValidator(2027)])),
                ('time', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(600)])),
                ('imdb', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('votes', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10000000)])),
                ('meta_score', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('gross', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000000000)])),
                ('description', models.TextField()),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('certification', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='movies', to='db.certification')),
            ],
            options={
                'ordering': ('name', 'year'),
            },
        ),
        migrations.CreateModel(
            name='Star',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, max_length=100, populate_from=['name'])),
                ('description', models.TextField(blank=True, null=True)),
                ('poster', models.URLField(blank=True, null=True)),
            ],
            options={
                'ordering': ('name',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MovieStar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(blank=True, choices=[('Lead', 'Lead'), ('Supporting', 'Supporting'), ('Cameo', 'Cameo'), ('Episodic', 'Episodic')], max_length=20, null=True)),
                ('screen_time', models.IntegerField(blank=True, null=True)),
                ('salary', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('character_name', models.CharField(blank=True, max_length=100, null=True)),
                ('debut', models.BooleanField(blank=True, null=True)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.movie')),
                ('star', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.star')),
            ],
        ),
        migrations.CreateModel(
            name='MovieGenre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('importance_level', models.IntegerField(blank=True, choices=[(1, 'Very Low'), (2, 'Low'), (3, 'Medium'), (4, 'High'), (5, 'Very High')], null=True)),
                ('added_date', models.DateField(auto_now_add=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.genre')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.movie')),
            ],
        ),
        migrations.CreateModel(
            name='MovieDirector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(blank=True, choices=[('Main Director', 'Main Director'), ('Assistant Director', 'Assistant Director'), ('Co-Director', 'Co-Director'), ('Executive Producer', 'Executive Producer')], max_length=20, null=True)),
                ('collaboration_years', models.IntegerField(blank=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('director', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.director')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.movie')),
            ],
        ),
        migrations.AddField(
            model_name='movie',
            name='directors',
            field=models.ManyToManyField(related_name='movies', through='db.MovieDirector', to='db.director'),
        ),
        migrations.AddField(
            model_name='movie',
            name='genres',
            field=models.ManyToManyField(related_name='movies', through='db.MovieGenre', to='db.genre'),
        ),
        migrations.AddField(
            model_name='movie',
            name='stars',
            field=models.ManyToManyField(related_name='movies', through='db.MovieStar', to='db.star'),
        ),
        migrations.AddConstraint(
            model_name='moviestar',
            constraint=models.UniqueConstraint(fields=('movie', 'star'), name='unique_movie_star_constraint'),
        ),
        migrations.AddConstraint(
            model_name='moviegenre',
            constraint=models.UniqueConstraint(fields=('movie', 'genre'), name='unique_movie_genre_constraint'),
        ),
        migrations.AddConstraint(
            model_name='moviedirector',
            constraint=models.UniqueConstraint(fields=('movie', 'director'), name='unique_movie_director_constraint'),
        ),
        migrations.AddConstraint(
            model_name='movie',
            constraint=models.UniqueConstraint(fields=('name', 'year', 'time'), name='unique_movie_constraint'),
        ),
    ]
